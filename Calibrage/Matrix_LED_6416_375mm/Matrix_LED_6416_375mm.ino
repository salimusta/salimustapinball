#include <Wire.h>

#define COL_PIXEL     64
#define ROW_PIXEL     16
#define LATCH_PIN 8
#define CLOCK_PIN 12
#define DATA_PIN 11
/*
int LATCH_PIN=8; //LT
int CLOCK_PIN=12;//SK
int DATA_PIN=11; //R1*/

int en_74138 = 2;
int la_74138 = 3;
int lb_74138 = 4;
int lc_74138 = 5;
int ld_74138 = 6;
 
unsigned int ROW_xPixel;
unsigned int ROW_num;
unsigned char Col_num_1;
unsigned char Col_num_2;
unsigned char Col_num_3;
unsigned char Col_num_4;
unsigned char Col_num_5;
unsigned char Col_num_6;
unsigned char Col_num_7;
unsigned char Col_num_8;


//Data code: Horizontal modulus ,Bytes reverse order
/*
unsigned char  EmptyBmp[]=
{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 };
*/
/*
unsigned char  FullBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
*/
unsigned char  FrameBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
/*
unsigned char  BallLeftBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xfc, 0x3, 0xc, 0xc, 0xc, 0x0, 0xc, 0xfc, 0xf3, 0xcf, 0xff, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xc, 0x33, 0xc, 0xc, 0x0, 0xc, 0xc, 0x30, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xc, 0x33, 0xc, 0xc, 0x0, 0xc, 0xc, 0x30, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xc, 0x33, 0xc, 0xc, 0x0, 0xc, 0xc, 0xf0, 0x3, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xfc, 0x3, 0x3f, 0xc, 0xc, 0x0, 0xc, 0xfc, 0x33, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xcc, 0xff, 0xc, 0xc, 0x0, 0xc, 0xc, 0x30, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xcc, 0xc0, 0xc, 0xc, 0x0, 0xc, 0xc, 0x30, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xc, 0xcc, 0xc0, 0xc, 0xc, 0x0, 0xc, 0xc, 0x30, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xfc, 0xc3, 0xc0, 0xfc, 0xfc, 0x0, 0xfc, 0xfc, 0x33, 0x0, 0xc, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
*/
unsigned char  SalimUstaPinballBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0xc0, 0x3, 0xf, 0x3, 0x33, 0x30, 0xc3, 0xf0, 0xf0, 0x3f, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x30, 0xcc, 0x30, 0x3, 0xf0, 0x3c, 0xc3, 0xc, 0x3, 0x3, 0xc3, 0x0, 0x0, 0xc0, 0x3, 0xf0, 0x33, 0xc0, 0x30, 0x3, 0x33, 0x33, 0xc3, 0xc, 0x0, 0x3, 0xc3, 0x0, 0x0, 0xc0, 0x3, 0xfc, 0xc3, 0xc3, 0x3f, 0x3, 0x33, 0x30, 0xc3, 0xf0, 0x0, 0x3, 0xff, 0x0, 0x0, 0xc0, 0x3, 0xcf, 0x3, 0xcc, 0x30, 0x3, 0x33, 0x30, 0xc3, 0x0, 0x3, 0x3, 0xc3, 0x0, 0x0, 0xc0, 0xc3, 0xc3, 0x33, 0xcc, 0x30, 0x3, 0x33, 0x30, 0xc3, 0xc, 0x3, 0x3, 0xc3, 0x0, 0x0, 0xc0, 0xf3, 0xf0, 0xc0, 0xc3, 0x30, 0x3f, 0x33, 0x30, 0x3c, 0xf0, 0x0, 0x3, 0xc3, 0x0, 0x0, 0xc0, 0x3f, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3f, 0x3c, 0xc0, 0x3f, 0xf0, 0xf0, 0xf0, 0xf0, 0xf, 0xfc, 0xf0, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0xf, 0xf, 0xc0, 0xc3, 0x0, 0xf0, 0xf3, 0xf0, 0x30, 0xcf, 0xf3, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0x3, 0xf, 0xc0, 0xc3, 0xf0, 0xf0, 0xf3, 0xf0, 0xf, 0xff, 0xf3, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0xc3, 0x3, 0xc0, 0x3f, 0xf0, 0xf0, 0xfc, 0xf0, 0x30, 0xcf, 0xf3, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0xf3, 0x3, 0xc0, 0x3, 0xf0, 0xf0, 0xfc, 0xf0, 0x30, 0xcf, 0xf3, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0xff, 0x0, 0xc0, 0x3, 0xf0, 0xf0, 0xf0, 0xf0, 0xf, 0xcf, 0xf3, 0xcf, 0x3f, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
/*
unsigned char  GoBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0xff, 0xf, 0x0, 0xf0, 0xf, 0x0, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0xf0, 0xff, 0x3f, 0x0, 0xff, 0xff, 0x0, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0xf0, 0x0, 0xfc, 0x0, 0xf, 0xf0, 0x0, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0xf0, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0xff, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0xff, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x3c, 0x0, 0xf0, 0xc0, 0x3, 0xc0, 0x3, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0xfc, 0x0, 0xfc, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0xf0, 0xff, 0x3f, 0x0, 0xff, 0xff, 0x0, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0xc0, 0xff, 0xf, 0x0, 0xf0, 0xf, 0x0, 0x3c, 0x3c, 0x3c, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };

unsigned char  BallLostBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xf3, 0x3f, 0x0, 0x3f, 0xf0, 0x0, 0xf, 0x0, 0x3c, 0x0, 0xfc, 0x0, 0xf0, 0x3, 0xff, 0xcf, 0xf3, 0xff, 0x3, 0x3f, 0xf0, 0x0, 0xf, 0x0, 0x3c, 0x0, 0xff, 0x3, 0xff, 0x3f, 0xff, 0xcf, 0xf3, 0xc0, 0xc3, 0xf3, 0xf0, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xf, 0xf, 0x3c, 0xf0, 0xc0, 0xf3, 0xc0, 0xc3, 0xf3, 0xf0, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xcf, 0x3, 0x0, 0xf0, 0xc0, 0xf3, 0xc0, 0xc3, 0xf3, 0xf0, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xcf, 0x3, 0x0, 0xf0, 0xc0, 0xf3, 0xff, 0xf0, 0xff, 0xf3, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xf, 0x3f, 0x0, 0xf0, 0xc0, 0xf3, 0xff, 0xf0, 0xff, 0xf3, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xf, 0xff, 0x3, 0xf0, 0xc0, 0xf3, 0xc0, 0xf3, 0xc0, 0xf3, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xf, 0xc0, 0x3f, 0xf0, 0xc0, 0xf3, 0xc0, 0xf3, 0xc0, 0xf3, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xf, 0x0, 0x3c, 0xf0, 0xc0, 0xf3, 0xc0, 0xf3, 0xc0, 0xf3, 0x0, 0xf, 0x0, 0x3c, 0xc0, 0x3, 0xcf, 0x3, 0x3c, 0xf0, 0xc0, 0xf3, 0xff, 0xf3, 0xc0, 0xf3, 0x3f, 0xff, 0x3, 0xfc, 0xf, 0xff, 0xc3, 0xff, 0x3f, 0xf0, 0xc0, 0xf3, 0x3f, 0xf0, 0xc0, 0xf3, 0x3f, 0xff, 0x3, 0xfc, 0xf, 0xfc, 0x0, 0xfc, 0x3, 0xf0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };

unsigned char  GameOverBmp[]=
{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0xff, 0xc3, 0x3f, 0x3c, 0xf0, 0xfc, 0xf, 0xf0, 0xf, 0xf, 0xcf, 0xff, 0xf0, 0x3f, 0xc0, 0xc3, 0xff, 0xf3, 0xf0, 0xfc, 0xfc, 0xfc, 0xf, 0xfc, 0x3f, 0xf, 0xcf, 0xff, 0xf0, 0xff, 0xc0, 0xc3, 0x3, 0xf0, 0xf0, 0xfc, 0xff, 0x3c, 0x0, 0x3c, 0x3c, 0xf, 0xcf, 0x3, 0xf0, 0xf0, 0xc0, 0xc3, 0x3, 0xf0, 0xff, 0x3c, 0xf3, 0xfc, 0x3, 0x3c, 0x3c, 0xf, 0xcf, 0x3f, 0xf0, 0xf0, 0xc0, 0xc3, 0xf3, 0xf3, 0xff, 0x3c, 0xf0, 0xfc, 0x3, 0x3c, 0x3c, 0xf, 0xcf, 0x3f, 0xf0, 0x3f, 0xc0, 0xc3, 0xc3, 0xf3, 0xf0, 0x3c, 0xf0, 0x3c, 0x0, 0x3c, 0x3c, 0xfc, 0xc3, 0x3, 0xf0, 0xf, 0xc0, 0xc3, 0xc3, 0xf3, 0xf0, 0x3c, 0xf0, 0x3c, 0x0, 0x3c, 0x3c, 0xfc, 0xc3, 0x3, 0xf0, 0x3c, 0xc0, 0xc3, 0xff, 0xf3, 0xf0, 0x3c, 0xf0, 0xfc, 0xf, 0xfc, 0x3f, 0xf0, 0xc0, 0xff, 0xf0, 0xf0, 0xc0, 0x3, 0xff, 0xf0, 0xf0, 0x3c, 0xf0, 0xfc, 0xf, 0xf0, 0xf, 0xf0, 0xc0, 0xff, 0xf0, 0xf0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
*/
unsigned char ball[7][7] = {{0, 0, 1, 1, 1, 0, 0}, 
                            {0, 1, 0, 0, 0, 1, 0},
                            {1, 0, 0, 0, 1, 1, 1},
                            {1, 0, 0, 0, 0, 1, 1},
                            {1, 0, 0, 0, 0, 1, 1},
                            {0, 1, 0, 0, 0, 1, 0},
                            {0, 0, 1, 1, 1, 0, 0}
                          };
                          
unsigned char number1[11][7] ={{0, 0, 0, 1, 1, 0, 0}, 
                               {0, 1, 1, 1, 1, 0, 0},
                               {1, 1, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {0, 0, 1, 1, 1, 0, 0},
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1}
                           };
                           
unsigned char number2[11][7] ={{0, 1, 1, 1, 1, 1, 0}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 1, 1, 0, 0},
                               {0, 0, 1, 1, 0, 0, 0},
                               {0, 1, 1, 0, 0, 0, 0},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1}
                           };
unsigned char number3[11][7] ={{0, 1, 1, 1, 1, 1, 0}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {0, 0, 1, 1, 1, 1, 0},
                               {0, 0, 1, 1, 1, 1, 0},
                               {0, 0, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0}
                           };
unsigned char number4[11][7] ={{1, 1, 0, 1, 1, 0, 0}, 
                               {1, 1, 0, 1, 1, 0, 0},
                               {1, 1, 0, 1, 1, 0, 0},
                               {1, 1, 0, 1, 1, 0, 0},
                               {1, 1, 0, 1, 1, 0, 0},
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 0, 1, 1, 0}
                           };
unsigned char number5[11][7] ={{1, 1, 1, 1, 1, 1, 1}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 1, 1, 1, 1, 0},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0}
                           };
unsigned char number6[11][7] ={{0, 1, 1, 1, 1, 1, 0}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 0, 0, 0, 0, 0},
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0}
                           };
unsigned char number7[11][7] ={{1, 1, 1, 1, 1, 1, 1}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 0, 1, 1, 0},
                               {0, 0, 0, 1, 1, 0, 0},
                               {0, 0, 0, 1, 1, 0, 0},
                               {0, 0, 1, 1, 0, 0, 0},
                               {0, 0, 1, 1, 0, 0, 0},
                               {0, 1, 1, 0, 0, 0, 0},
                               {0, 1, 1, 0, 0, 0, 0}
                           };
unsigned char number8[11][7] ={{0, 1, 1, 1, 1, 1, 0}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0},
                               {0, 1, 1, 1, 1, 1, 0},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0}
                           };
unsigned char number9[11][7] ={{0, 1, 1, 1, 1, 1, 0}, 
                               {1, 1, 1, 1, 1, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {0, 0, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 1, 1, 1, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0}
                           };

unsigned char number0[11][7] ={{0, 0, 1, 1, 1, 0, 0}, 
                               {0, 1, 1, 1, 1, 1, 0},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {1, 1, 0, 0, 0, 1, 1},
                               {0, 1, 1, 1, 1, 1, 0},
                               {0, 0, 1, 1, 1, 0, 0}
                           };
unsigned char letterA[9][6] ={{0, 1, 1, 1, 1, 0}, 
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1}
                           };
unsigned char letterB[9][6] ={{1, 1, 1, 1, 1, 0}, 
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 0},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 1, 1, 1, 0}
                           };
unsigned char letterE[9][5] ={{1, 1, 1, 1, 1}, 
                              {1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 0},
                              {1, 1, 1, 1, 0},
                              {1, 1, 1, 1, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 1, 1, 1},
                              {1, 1, 1, 1, 1}
                           };
unsigned char letterF[9][5] ={{1, 1, 1, 1, 1}, 
                              {1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 1, 1, 0},
                              {1, 1, 1, 1, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0}
                           };
unsigned char letterG[9][6] ={{0, 1, 1, 1, 1, 1}, 
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 0, 0},
                              {1, 1, 0, 0, 0, 0},
                              {1, 1, 0, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {0, 1, 1, 1, 1, 0}
                           };
unsigned char letterL[9][5] ={{1, 1, 0, 0, 0}, 
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 0, 0, 0},
                              {1, 1, 1, 1, 1},
                              {1, 1, 1, 1, 1}
                           };
unsigned char letterM[9][7] ={{1, 1, 0, 0, 0, 1, 1}, 
                              {1, 1, 1, 0, 1, 1, 1},
                              {1, 1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 1, 0, 1, 1},
                              {1, 1, 0, 0, 0, 1, 1},
                              {1, 1, 0, 0, 0, 1, 1},
                              {1, 1, 0, 0, 0, 1, 1},
                              {1, 1, 0, 0, 0, 1, 1},
                              {1, 1, 0, 0, 0, 1, 1}
                           }; 
unsigned char letterO[9][6] ={{0, 1, 1, 1, 1, 0}, 
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {0, 1, 1, 1, 1, 0}
                           }; 
unsigned char letterR[9][6] ={{1, 1, 1, 1, 1, 0}, 
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 0},
                              {1, 1, 1, 1, 0, 0},
                              {1, 1, 0, 1, 1, 0},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1}
                           }; 
unsigned char letterS[9][6] ={{0, 1, 1, 1, 1, 0}, 
                              {1, 1, 1, 1, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {0, 1, 1, 0, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 0, 1, 1, 0},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 1, 1, 1, 1},
                              {0, 1, 1, 1, 1, 0}
                           }; 
unsigned char letterT[9][6] ={{1, 1, 1, 1, 1, 1}, 
                              {1, 1, 1, 1, 1, 1},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0}
                           }; 
unsigned char letterV[9][6] ={{1, 1, 0, 0, 1, 1}, 
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {1, 1, 0, 0, 1, 1},
                              {0, 1, 1, 1, 1, 0},
                              {0, 1, 1, 1, 1, 0},
                              {0, 0, 1, 1, 0, 0},
                              {0, 0, 1, 1, 0, 0}
                           };
unsigned char symbolExclamation[9][2] ={{1, 1}, 
                                        {1, 1},
                                        {1, 1},
                                        {1, 1},
                                        {1, 1},
                                        {0, 0},
                                        {0, 0},
                                        {1, 1},
                                        {1, 1}
                           };
                         
void shiftOut(unsigned char dataOut){
    for(int i=0;i<=7;i++){
      PORTB &=~(1<<(CLOCK_PIN-8));
     if(dataOut & (0x01<<i))  PORTB |=1<<(DATA_PIN-8);
     else  PORTB &=~(1<<(DATA_PIN-8));
     
     PORTB |=1<<(CLOCK_PIN-8);
   }
}

unsigned char Combine_2BitsTo1Bit(unsigned char num,unsigned char *BMP){
  
  unsigned char Col_num_tem_1;
  unsigned char Col_num_tem_2;
  unsigned int Col_num_tem = 0;
  unsigned char i=0;
  unsigned char Col_num_1bit = 0x00;
  
  Col_num_tem_1 = *(BMP+num);
  Col_num_tem_2 = *(BMP+num+1);
  
  Col_num_tem = Col_num_tem_1;
  Col_num_tem |= (Col_num_tem_2 << 8);
  
 for(i=0;i<8;i++){   
    if(Col_num_tem&(0x0003<<i*2)) Col_num_1bit |= (0x01<<i);
 }
  return ~Col_num_1bit;
}

void display_pixel(unsigned char *BMP)
{
  unsigned int dis_cnt=1;
  unsigned int i;
 
   for(i=0;i<dis_cnt*16;i++){
     digitalWrite(en_74138, HIGH);//Turn off display
  
     //Col scanning
    shiftOut(Col_num_1);
    shiftOut(Col_num_2);
    shiftOut(Col_num_3);
    shiftOut(Col_num_4);
    shiftOut(Col_num_5);
    shiftOut(Col_num_6);
    shiftOut(Col_num_7);
    shiftOut(Col_num_8);
  
    digitalWrite(LATCH_PIN, LOW);
    digitalWrite(LATCH_PIN, HIGH);
  
    //Row scanning
    // AVR Port Operation 
    PORTD = ((ROW_xPixel << 3 ) & 0X78) | (PORTD & 0X87);//Write PIN 3 4 5 6 la_74138 lb_74138 lc_74138 ld_74138
     
    digitalWrite(en_74138, LOW);//Turn on display
  
    if(ROW_xPixel==15) ROW_xPixel=0; else ROW_xPixel++;
  
   //Single color,2 bits/pixel 
   Col_num_1 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2,BMP);
   Col_num_2 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+2,BMP);
   Col_num_3 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+4,BMP);
   Col_num_4 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+6,BMP);
   Col_num_5 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+8,BMP);
   Col_num_6 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+10,BMP);
   Col_num_7 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+12,BMP);
   Col_num_8 = Combine_2BitsTo1Bit((COL_PIXEL/8)*ROW_xPixel*2+14,BMP);
  }
}

void setup()
{
  pinMode(LATCH_PIN,OUTPUT);
  pinMode(CLOCK_PIN,OUTPUT);
  pinMode(DATA_PIN,OUTPUT);
  
  pinMode(en_74138,OUTPUT);
  pinMode(la_74138,OUTPUT);
  pinMode(lb_74138,OUTPUT);
  pinMode(lc_74138,OUTPUT);
  pinMode(ld_74138,OUTPUT);
  
  Serial.begin(9600); 
  Wire.begin(4);
  Wire.onReceive(receiveEvent);
  
  digitalWrite(en_74138, LOW);
  
  // AVR Port Settings
  DDRD |= 0x78; //Set PIN 3 4 5 6 output  
}


byte requestedScreen = 0;
void receiveEvent(int howMany) {
  if(howMany == 1){
    requestedScreen = Wire.read();
    
  }
  
}

unsigned char  tmpBmp[256];

void copyFrames(unsigned char *source, unsigned char *dest){
  for(short i = 0; i < 256; i++){
    dest[i] = source[i];
  }
}

void drawMotif(unsigned char *frame, unsigned char motif[][7], short motifx, short motify, short sizex, short sizey){
  
  for(short y = 0; y < sizey; y++){
    for(short x = 0; x < sizex; x++){
      short tabIndex = ((motify+y)*16) + ((motifx+x)/4);
      if(motif[y][x] == 1 && motifx+x<64 && motifx+x>=0 && motify+y<16 && motify+y>=0){
        byte currentPixel = frame[tabIndex];
         
        byte newPixel = currentPixel | (3 << (((motifx+x)%4)*2))  ;
         
        tmpBmp[tabIndex] = newPixel;
      }
    }
  }
    
}

void drawLetter5(unsigned char *frame, unsigned char motif[][5], short motifx, short motify){
  short sizey = 9;
  short sizex = 5;
  
  for(short y = 0; y < sizey; y++){
    for(short x = 0; x < sizex; x++){
      short tabIndex = ((motify+y)*16) + ((motifx+x)/4);
      if(motif[y][x] == 1 && motifx+x<64 && motifx+x>=0 && motify+y<16 && motify+y>=0){
        byte currentPixel = frame[tabIndex];
         
        byte newPixel = currentPixel | (3 << (((motifx+x)%4)*2))  ;
         
        tmpBmp[tabIndex] = newPixel;
      }
    }
  }   
}

void drawLetter6(unsigned char *frame, unsigned char motif[][6], short motifx, short motify){
  short sizey = 9;
  short sizex = 6;
  
  for(short y = 0; y < sizey; y++){
    for(short x = 0; x < sizex; x++){

      short tabIndex = ((motify+y)*16) + ((motifx+x)/4);
      if(motif[y][x] == 1 && motifx+x<64 && motifx+x>=0 && motify+y<16 && motify+y>=0){
        byte currentPixel = frame[tabIndex];
         
        byte newPixel = currentPixel | (3 << (((motifx+x)%4)*2))  ;
         
        tmpBmp[tabIndex] = newPixel;
      }
    }
  }   
}
void drawLetter7(unsigned char *frame, unsigned char motif[][7], short motifx, short motify){
  short sizey = 9;
  short sizex = 7;
  
  for(short y = 0; y < sizey; y++){
    for(short x = 0; x < sizex; x++){
      short tabIndex = ((motify+y)*16) + ((motifx+x)/4);
      if(motif[y][x] == 1 && motifx+x<64 && motifx+x>=0 && motify+y<16 && motify+y>=0){
        byte currentPixel = frame[tabIndex];
         
        byte newPixel = currentPixel | (3 << (((motifx+x)%4)*2))  ;
         
        tmpBmp[tabIndex] = newPixel;
      }
    }
  }   
}
void drawLetter2(unsigned char *frame, unsigned char motif[][2], short motifx, short motify){
  short sizey = 9;
  short sizex = 2;
  
  for(short y = 0; y < sizey; y++){
    for(short x = 0; x < sizex; x++){
      short tabIndex = ((motify+y)*16) + ((motifx+x)/4);
      if(motif[y][x] == 1 && motifx+x<64 && motifx+x>=0 && motify+y<16 && motify+y>=0){
        byte currentPixel = frame[tabIndex];
         
        byte newPixel = currentPixel | (3 << (((motifx+x)%4)*2))  ;
         
        tmpBmp[tabIndex] = newPixel;
      }
    }
  }   
}

void drawString(char *str, short startxpos){
  short index = 0;
  short xpos = startxpos;
  short ypos = 4;
  while(str[index] != '\0'){
    if(str[index] == 'A') {drawLetter6(tmpBmp, letterA, xpos, ypos); xpos += 7;}
    else if(str[index] == 'B') {drawLetter6(tmpBmp, letterB, xpos, ypos); xpos += 7;}
    else if(str[index] == 'E') {drawLetter5(tmpBmp, letterE, xpos, ypos); xpos += 6;}
    else if(str[index] == 'F') {drawLetter5(tmpBmp, letterF, xpos, ypos); xpos += 6;}
    else if(str[index] == 'G') {drawLetter6(tmpBmp, letterG, xpos, ypos); xpos += 7;}
    else if(str[index] == 'L') {drawLetter5(tmpBmp, letterL, xpos, ypos); xpos += 6;}
    else if(str[index] == 'M') {drawLetter7(tmpBmp, letterM, xpos, ypos); xpos += 8;}
    else if(str[index] == 'O') {drawLetter6(tmpBmp, letterO, xpos, ypos); xpos += 7;}
    else if(str[index] == 'R') {drawLetter6(tmpBmp, letterR, xpos, ypos); xpos += 7;}
    else if(str[index] == 'S') {drawLetter6(tmpBmp, letterS, xpos, ypos); xpos += 7;}
    else if(str[index] == 'T') {drawLetter6(tmpBmp, letterT, xpos, ypos); xpos += 7;}
    else if(str[index] == 'V') {drawLetter6(tmpBmp, letterV, xpos, ypos); xpos += 7;}
    else if(str[index] == '!') {drawLetter2(tmpBmp, symbolExclamation, xpos, ypos); xpos += 3;}
    else if(str[index] == ' ') {xpos += 1;}
    index++;
    
  }
}

short displayedFrame = 3;
int time = 0;
int freq = 2;
short number = 0;
short x = -20;
short y = 0;

void loop(){
  
  copyFrames(FrameBmp, tmpBmp);
  while(displayedFrame == 1){
    time++;
    drawMotif(tmpBmp, ball, x, y, 7, 7);
    
    //Display the result
    display_pixel(tmpBmp);
    
    //Restore the picture
    copyFrames(FrameBmp, tmpBmp);
   
    //Update the drawing parameters, coordonates
    if(time == freq){
      time = 0;
      x = x + 1;
      if(x == 64){
        x = 0;
        y = y + 1;
        if(y == 16){
          y = 0;
        }
      }
    }
  }
  
  //copyFrames(BallLeftBmp, tmpBmp);
  while(displayedFrame == 2){
    time++;
    if(number == 0) drawMotif(tmpBmp, number0, 5, 2, 7, 11);
    else if(number == 1) drawMotif(tmpBmp, number1, 5, 2, 7, 11);
    else if(number == 2) drawMotif(tmpBmp, number2, 5, 2, 7, 11);
    else if(number == 3) drawMotif(tmpBmp, number3, 5, 2, 7, 11);
    
    display_pixel(tmpBmp);
    //copyFrames(BallLeftBmp, tmpBmp);
      
    if(time == freq){
      time = 0;
     
      number++;
      if(number > 3) number = 0;
    }
  }
  
  //FRAME SALIMUSTA PINBALL
  while(displayedFrame == 3){
    time++;
    short xpos = 15;
    
    drawString("-- GAME OVER !!!!!--", x);

    //Display the result
    display_pixel(tmpBmp);
    
    //Restore the picture
    copyFrames(FrameBmp, tmpBmp);
    
    if(time == freq){
      time = 0;
      x = x + 1;
      if(x == 64){
        x = -100;
        
      }
    }
    
  }
  
 
}


